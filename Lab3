ques-1

#include <pthread.h>
#include <stdio.h>
#include <stdlib.h>
#include<sys/types.h>
#include<sys/wait.h>
#include<unistd.h>
void *quartersum(void *arg);
int sum ,count;
int a[20];
int main(int argc, char **argv)
{
    for(int i=0;i<20;i++)
    {  
        a[i]=i;
    }
	    pthread_t thread1, thread2,thread3,thread4;
	    pthread_create(&thread1, NULL, quartersum, NULL);
	    pthread_create(&thread2, NULL, quartersum, NULL);
	    pthread_create(&thread3, NULL, quartersum, NULL);
	    pthread_create(&thread4, NULL, quartersum, NULL);
        pid_t childpid;
	    childpid=fork();
		if(childpid==0){
	   	    pthread_join(thread1, NULL); 
 	    pthread_join(thread2, NULL);
    }
	
	else{
		wait(NULL);
	    
	    pthread_join(thread3, NULL);
	    pthread_join(thread4, NULL); 
	     printf("Final sum%d",sum);
}

}

void *quartersum(void *arg)
{
    printf("\n Threadid: %ld",pthread_self());
   int i=0;
	while(i<5)
	{
	    sum+=a[count];
	    count++;
	    i++;
	}
	 printf("\n sum is:%d",sum);
	 printf("\n count is:%d",count);
	pthread_exit(NULL);
}


ques-2

/******************************************************************************

                            Online C Compiler.
                Code, Compile, Run and Debug C program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/
#include <pthread.h>
#include <stdio.h>
#include <stdlib.h>
#include<sys/types.h>
#include<sys/wait.h>
#include<unistd.h>
void *quartersum(void *arg);
int k=0;
int m1[4][3];
int m2[3][4];
int m3[4][4];
int main(int argc, char **argv)
{
    int var=0;
    int *thread=&var;
        for(int i=0;i<4;i++)
        {
            for(int j=0;j<3;j++)
            {
                m1[i][j]=2;
            }
        }
        for(int i=0;i<3;i++)
        {
            for(int j=0;j<4;j++)
            {
                m2[i][j]=2;
            }
        }
	    pthread_t thread1, thread2,thread3,thread4;
	   pthread_create(&thread1, NULL, quartersum,NULL);
	  pthread_create(&thread2, NULL, quartersum, NULL);
	    pthread_create(&thread3, NULL, quartersum, NULL);
	    pthread_create(&thread4, NULL, quartersum, NULL);
        
	   	pthread_join(thread1, NULL); 
 	   pthread_join(thread2, NULL);
 	    pthread_join(thread3, NULL);
	    pthread_join(thread4, NULL); 
	      for(int i=0;i<4;i++)
        {
            for(int j=0;j<4;j++)
            {
                printf("\t%d",m3[i][j]);
            }
            printf("\n");
        }
	  
	

}

void *quartersum(void *arg)
{
    printf("\n Threadid: %ld",pthread_self());
   int sum=0;
    for(int i=0;i<4;i++)
        {
            for(int j=0;j<3;j++)
            {
               sum+=m1[k][j]*m2[j][i];
             
            }
            m3[k][i]=sum;
            sum=0;
            
        }
        k++;
      
        
         
    
   
	pthread_exit(NULL);
}

ques-3

include <pthread.h>
#include <stdio.h>
#include <stdlib.h>
#include<sys/types.h>
#include<sys/wait.h>
#include<unistd.h>
#include<math.h>
void *binarysearch(void *arg);
int a[20];
int main(int argc, char **argv)
{
    printf("enter the value to be searched from 0 to 19");
     int var;
    scanf("%d",&var);
    int *x=&var;
    for(int i=0;i<20;i++)
    {
        //scanf("%d",&a[i]);
        a[i]=i;
    }
       
	   pthread_t thread1;
	   pthread_create(&thread1, NULL, binarysearch,(void*)x);
	   	   	pthread_join(thread1, NULL);
}

void *binarysearch(void *arg)
{
    int flag=0;
    printf("\n Threadid: %ld",pthread_self());
    int x=*(int*)arg;
    int l=0,h=19;
    int m;
    while(l<=h)
    {
        m=(l+h)/2;
       // printf("\n%d",m);
        if (a[m]==x)
        {
            printf("\nelemnt founded ");
            flag=1;
            break;
        }
        else if(x<a[m])
        {
            h=m-1;
        }
        else
        {
            l=m+1;
        }
        
    }
    if(flag==0)
    printf("\nelemnt not founded ");
    
   
	pthread_exit(NULL);
}




